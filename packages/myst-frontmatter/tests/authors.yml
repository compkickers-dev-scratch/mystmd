title: Authors
cases:
  - title: Simple Author Text in List
    raw:
      authors:
        - Just A. Name
    normalized:
      authors:
        - id: Just A. Name
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
      authorsSource:
        - Just A. Name
  - title: Simple Authors String
    raw:
      authors: Just A. Name
    normalized:
      authors:
        - id: Just A. Name
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
      authorsSource:
        - Just A. Name
  - title: Use Author rather than author`s`
    raw:
      author: Just A. Name
    normalized:
      authors:
        - id: Just A. Name
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
      authorsSource:
        - Just A. Name
  - title: Using both author and author`s` shows a warning
    raw:
      author: nope
      authors: Just A. Name
    normalized:
      authors:
        - id: Just A. Name
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
      authorsSource:
        - Just A. Name
    warnings: 1
  - title: Affiliations unpack semicolon-delimited lists
    raw:
      author:
        id: jn
        name: Just A. Name
        affiliation: University; Company
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
          affiliations:
            - University
            - Company
      authorsSource:
        - jn
      affiliations:
        - id: University
          name: University
        - id: Company
          name: Company
  - title: First email is corresponding
    raw:
      author:
        id: jn
        name: Just A. Name
        email: example@example.com
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
          email: example@example.com
          corresponding: true
      authorsSource:
        - jn
  - title: First email is corresponding (unless false)
    raw:
      author:
        id: jn
        name: Just A. Name
        email: example@example.com
        corresponding: false
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
          email: example@example.com
          corresponding: false
      authorsSource:
        - jn
  - title: Respect corresponding flag
    raw:
      authors:
        - id: jn
          name: Just A. Name
          email: example@example.com
        - id: an
          name: A. Nother Name
          email: example@example.com
          corresponding: true
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
          email: example@example.com
        - id: an
          name: A. Nother Name
          nameParsed:
            literal: A. Nother Name
            given: A. Nother
            family: Name
          email: example@example.com
          corresponding: true
      authorsSource:
        - jn
        - an
  - title: Warn if author has no name
    raw:
      authors:
        - id: jn
          name: Just A. Name
          email: example@example.com
        - email: example@example.com
          corresponding: true
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
          email: example@example.com
        - id: authors-generated-uid-1
          email: example@example.com
          corresponding: true
      authorsSource:
        - jn
        - authors-generated-uid-1
    warnings: 1
  - title: Warn if author has no family name
    raw:
      authors:
        - name:
            given: Someone
    normalized:
      authors:
        - id: authors-generated-uid-0
          name: ', Someone'
          nameParsed:
            literal: ', Someone'
            given: Someone
      authorsSource:
        - authors-generated-uid-0
    warnings: 1
  - title: Warn if author has no given name
    raw:
      authors:
        - name: Someone
    normalized:
      authors:
        - id: authors-generated-uid-0
          name: 'Someone'
          nameParsed:
            literal: 'Someone'
            family: Someone
      authorsSource:
        - authors-generated-uid-0
    warnings: 1
  - title: Parsed name is maintained
    raw:
      authors:
        - id: jn
          name:
            literal: Just A. Name
            given: Little
            non_dropping_particle: von
            family: Junior
            suffix: Jr.
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Little
            non_dropping_particle: von
            family: Junior
            suffix: Jr.
      authorsSource:
        - jn
  - title: Name object with lots of commas warns
    raw:
      authors:
        - name:
            literal: Commas, here, are, great,
            given: Commas,
            non_dropping_particle: here,
            family: are,
            suffix: warnings,
    normalized:
      authors:
        - id: authors-generated-uid-0
          name: Commas, here, are, great,
          nameParsed:
            literal: Commas, here, are, great,
            given: Commas,
            non_dropping_particle: here,
            family: are,
            suffix: warnings,
      authorsSource:
        - authors-generated-uid-0
    warnings: 4
  - title: Name string with extra comma warns
    raw:
      authors:
        - name: A, B, C, D
    normalized:
      authors:
        - id: authors-generated-uid-0
          name: A, B, C, D
          nameParsed:
            literal: A, B, C, D
            given: D
            family: A, B
            suffix: C
      authorsSource:
        - authors-generated-uid-0
    warnings: 1
  - title: Display name expands
    raw:
      authors:
        - id: jn
          name:
            literal: Just A. Name
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
      authorsSource:
        - jn
  - title: Display name expands
    raw:
      authors:
        - id: jn
          name:
            literal: Just A. Name
    normalized:
      authors:
        - id: jn
          name: Just A. Name
          nameParsed:
            literal: Just A. Name
            given: Just A.
            family: Name
      authorsSource:
        - jn
  - title: Complex name renders
    raw:
      authors:
        - name:
            given: A
            dropping_particle: b
            non_dropping_particle: c
            family: D
            suffix: E
    normalized:
      authors:
        - id: authors-generated-uid-0
          name: c D, E, A b
          nameParsed:
            literal: c D, E, A b
            given: A
            dropping_particle: b
            non_dropping_particle: c
            family: D
            suffix: E
      authorsSource:
        - authors-generated-uid-0
